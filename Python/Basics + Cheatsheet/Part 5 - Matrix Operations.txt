import numpy as np

# Element-wise Multiplication
c = a * b

# Matrix Dot/Inner Product
c = a.dot(b)
c = np.dot(a,b)

# Matrix Outer Product
c = np.outer(a,b)

# Matrix Inverse
Ainv = np.linalg.inv(A)

# Identity Matrix (I = A.A')
Iden = Ainv.dot(a)

# Determinant of Matrix
det = np.linalg.det(A)

# Diagonal of matrix
d = np.diag(a)

# Diagonal matrix function is overloaded
# to create a diagonal matrix as well as
# retrieve diagonal values of a matrix.

# Matrix Trace (Sum of Diagonal)
mt = np.trace(a)

# Transpose of Matrix
trans = a.transpose()

# Covariance of Matrix
X = np.random.randn(100,3) # No. of features = 3
cov = np.cov(X)
cov.shape # Gives (100,100) as the covariance shape
# Since we need (3,3) as the covariance shape
cov = np.cov(X.transpose())

# Eigen Values/Vectors of Matrix
e = np.linalg.eig(cov)
# For Symmetric(A=A') and Hermitian Matrices
eh = np.linalg.eigh(cov)
