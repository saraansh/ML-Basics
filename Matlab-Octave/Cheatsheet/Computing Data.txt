>> A * B; %Simple Matrix Multiplication

>> A .* B; %Corresponding Value Multiplication

>> A .^ 2; %Squaring each term in A

>> 1 ./ A; %Gives a matrix with reciprocated values of matrix A

>> % -A, log(A), abs(A), exp(A) are similar functions applicable on A

>> A'; %Gives the transpose of matrix A

>> B = [1 15 2 4];
>> val = max(B) %Maximum value in B 
	val = 15
>> [val, ind] = max(B) %Maximum value in B and its index
	val = 15
	ind = 2

>> max([1 20; 2 30; 3 10]) %Gives column wise maximum
	ans =
		3	30

>> B < 5 %gives a truth value matrix
	ans =
		1	0	1	1

>> find(B < 5) %gives the position of values less than 5
	ans =
		1	3	4

>> magic(5) %returns a magic matrix

>> sum(a), prod(a) %Returns sum and product of all elements

>> floor(a), ceil(a) %Returns the floor or ceil value matrix

>> A = magic(3)
	A =
		8	1	6
		3	5	7
		4	9	2
>> max(A, [], 1) %Maximum in each column, same result for max(A)
	ans =
		8	9	7
>> max(A, [], 2) %Maximum in each row
	ans =
		8
		7
		9

>> sum(A, 1) %gives row matrix with sums of each column
>> sum(A, 2) %gives column matrix with sums of each row

>> flipud(A) %Flips the matrix upside down
	ans =
		4	9	2
		3	5	7
		8	1	6

>> pinv(A); %pseudo-inverse of A, more efficient than inv(A)
>> %It gives the correct solution even when A is non-invertible.